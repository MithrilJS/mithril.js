#!/usr/bin/env node
"use strict"

const o = require("../ospec")
const path = require("path")
const glob = require("glob")


const parseArgs = (argv) => {
	argv = ["--globs"].concat( argv.slice(2) )
	const args = {}
	let name
	argv.forEach((arg) => {
		if (/^--/.test(arg)) {
			name = arg.substr(2)
			args[name] = []
		}
		else {
			args[name].push( arg )
		}
	})
	return args
}


const args = parseArgs(process.argv)

const globList = args.globs && args.globs.length ? args.globs : ["**/tests/**/*.js"]
const ignore = ["**/node_modules/**"].concat( args.ignore||[] )


let pending = globList.length

globList.forEach((globPattern) => {
	glob(globPattern, { ignore }, (err, fileNames) => {
		fileNames.forEach((fileName) => {
			require(path.normalize(process.cwd()) + "/" + fileName) // eslint-disable-line global-require
		})
		pending -= 1
		if (!pending) {
			o.run()
		}
	})
});


process.on("unhandledRejection", (e) => {
	console.log("Uncaught (in promise) " + e.stack)
})
