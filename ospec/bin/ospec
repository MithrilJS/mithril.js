#!/usr/bin/env node
"use strict"

const o = require("../ospec")
const path = require("path")
const glob = require("glob")


const parseArgs = (argv) => {
	argv = ["--globs"].concat(argv.slice(2))
	const args = {}
	let name
	argv.forEach((arg) => {
		if (/^--/.test(arg)) {
			name = arg.substr(2)
			args[name] = args[name] || []
		} else {
			args[name].push(arg)
		}
	})
	return args
}


const args = parseArgs(process.argv)
const globList = args.globs && args.globs.length ? args.globs : ["**/tests/**/*.js"]
const ignore = ["**/node_modules/**"].concat(args.ignore||[])
const cwd = process.cwd()

globList.forEach((globPattern) => {
	glob(globPattern, {ignore})
		.on("match", (fileName) => { require(path.join(cwd, fileName)) }) // eslint-disable-line global-require
		.on("error", (e) => console.error(e))
		.on("end", o.run)
});

process.on("unhandledRejection", (e) => { console.log("Uncaught (in promise) " + e.stack) })
